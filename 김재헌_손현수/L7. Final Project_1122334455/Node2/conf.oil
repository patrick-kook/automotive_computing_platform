CPU mySystem {
   OS myOs {
      EE_OPT = "DEBUG";
      USERESSCHEDULER = TRUE;
      CPU_DATA = AVR8 {
         MULTI_STACK = TRUE;
      };
      MCU_DATA = MEGA {
         MODEL = MEGA_328p;
      };
      LIB = ARDUINO {
         SDK_BOARD = UNO;
         VARIANT = CC {
            VERSION = "1.8.16";
         };
         STAND_ALONE = TRUE;      // Generate arduino libraries
      };
      KERNEL_TYPE = OSEK {
         CLASS = ECC2;   // Default
      };
   };
   
   APPDATA myApp {
      APP_SRC = "bsw.cpp";
      APP_SRC = "asw.c";
      APP_SRC = "SPI.cpp";
      APP_SRC = "../lib/ACAN2517FD/ACAN2517FD.cpp";
      APP_SRC = "../lib/ACAN2517FD/ACAN2517FDSettings.cpp";
      APP_SRC = "Car_Model.cpp";
      
   };
   
	EVENT EventFront { MASK = AUTO; };
    EVENT EventLeft { MASK = AUTO; };
    EVENT EventRight { MASK = AUTO; };
   

   RESOURCE rpm_control {
        RESOURCEPROPERTY = STANDARD;
    };


   TASK Task_CAN_ReadMsg {
	// Write the code below.
	PRIORITY = 4;
	STACK = SHARED;
	SCHEDULE = FULL;   
	AUTOSTART = FALSE;   
	ACTIVATION = 1;
   RESOURCE = rpm_control;      
      
   };



TASK SensorTask {
	// Write the code below.
	PRIORITY = 3;
	SCHEDULE = FULL;
	AUTOSTART = TRUE;
	ACTIVATION = 1;
	STACK = PRIVATE{
		// Write the code below.
		SIZE = 128;
	};
    EVENT = EventFront;
    EVENT = EventLeft;
    EVENT = EventRight;
    };

    TASK AvoidFrontTask {
      // Write the code below.
        PRIORITY = 2;
        SCHEDULE = FULL;
        AUTOSTART = FALSE;
        ACTIVATION = 1;
        STACK = SHARED;
        RESOURCE = rpm_control;
    };


   
    TASK AvoidLeftTask {
      // Write the code below.
        PRIORITY = 2;
        SCHEDULE = FULL;
        AUTOSTART = FALSE;
        ACTIVATION = 1;
        STACK = SHARED;
        RESOURCE = rpm_control;
    };

    TASK AvoidRightTask {
      // Write the code below.
        PRIORITY = 2;
        SCHEDULE = FULL;
        AUTOSTART = FALSE;
        ACTIVATION = 1;
        STACK = SHARED;
        RESOURCE = rpm_control;
    };



   ISR TimerISR {
      CATEGORY = 2;
      SOURCE = "TIMER1_COMPA";

      // Write the code below.
      PRIORITY = 10;
   };

   COUNTER counter1 {
      MINCYCLE = 1;
      MAXALLOWEDVALUE = 65535;
      TICKSPERBASE = 1;
   };


   ALARM alarm1 {
      COUNTER = counter1;
      ACTION = ACTIVATETASK {
         TASK = Task_CAN_ReadMsg;
      };      
      AUTOSTART = TRUE {
         ALARMTIME = 5;
         CYCLETIME = 1;
      };
   };
   
};
